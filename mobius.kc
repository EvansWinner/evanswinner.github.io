Playing with The M√∂bius Function in bash
========================================
     Evans H. Winner, April, 2018


Introduction
============

Let's implement the famous M√∂bius function, Œº(n), defined on
the natural numbers, in bash ‚Äî really in awk, mainly.

Œº(n) is defined[1] as 1 if n=1; as 0 if n has a factor which
is itself a perfect square; and otherwise it is defined as
(-1)‚Å±, where i is the number of factors in n's prime
factorization. Let's see if we can write a function that
will return just Œº(n).


I. The M√∂bius Function
======================

Before we try, let's note that the case of n=1 is
trivial. Then, the case of (-1)‚Å± is easy too, and quick to
calculate, by the observation that (-1)‚Å± is -1 for any odd
i, and 1 for any even i. This leaves only determining
whether there are any perfect squares that factor into n as
a challenge. Note here that this is the same thing as
determining whether there are any numbers in n's prime
factorization that appear more than once. If so, then Œº(n) =
0.

{{{
Œº () {
  factor $1 | \
  awk '{
         f = NF - 1;

         if (f == 0) { print 1; exit } # n=1

         for (i = 2; i <= NF; i++) {
           facts[$i] += 1;
         }
	 
	 for (i in facts) {     # If n is NOT
	   if (facts[i] >= 2) { # squarefree, then
	     print 0; exit;     # Œº(n) = 0.
	   }
	 }

         if (f % 2 == 0) {
           print 1
         } else {
           print -1
         }
         delete facts
      }'
}
}}}

Let's test it on some numbers.

Œº(1) equals 1 by definition:

{{{
Œº 1
}}}

10 has two prime factors, an even number, so Œº(10) = 1:

{{{
Œº 10
}}}

11 has an odd number of prime factors (1), so Œº(11) = -1:

{{{
Œº 11
}}}

Now, 8 has three prime factors ‚Äî an odd number of
factors. But given the definition of the function, if n has
a perfect square as a factor) then Œº(n) = 0, so Œº(8) = 0
(because 8 has 4 as a factor, which is 2¬≤).

{{{
Œº 8
}}}

Similarly, even though 9 has an even number of prime factors
(3 and 3) it too has a square as a factor (itself: 9), so
also Œº(9) = 0.

{{{
Œº 9
}}}

Let‚Äôs calculate Œº(n) for all 1 <= n <= 10, and have a look
at the result:

{{{
for i in {1..10}; do Œº $i; done | fmt -60
}}}

It works. Let‚Äòs plot the first 50 values:

{{{
for i in {1..50}; do Œº $i; done  | \
    gnuplot -e "set terminal dumb;
                set title 'M√∂bius Function n = 1 to 50'; \
                plot '-' with lines title 'Œº(n)'"
}}}


II. Digression: The Mertens Function
====================================

According to MathWorld, the Mertens Function[2], M(n), is
the sum of the results of the M√∂bius function, from Œº(1) to
Œº(n), that is,
        
                            n
                    M(n) ‚â°  ùö∫  Œº(k)                       (1)
                           k=1

Let's make that function too ‚Äî

{{{
M () {
  for i in $(seq 1 $1); do Œº $i; done | \
  awk '{M = M + $0} END{print M}'
}
}}}

‚Äî and check the first 10 of them:

{{{
  for n in {1..10}; do M $n; done | fmt -60
}}}

That, too, works. We can plot the first 50 values for that too.

{{{
for i in {1..50}; do M $i; done | \
   gnuplot -e "set terminal dumb; \
          set title 'Mertens Function n = 1 to 50'; \
          plot '-' with lines title 'M(n)"
}}}


III. Proportions of M√∂bius function outputs
===========================================

According to a source[3] I ran into, the probablility that
Œº(n) = 1 approaches 3/œÄ¬≤. Specifically,

   P(Œº(n) = -1) = 3/œÄ¬≤ = P(Œº(n) = 1) = 3/œÄ¬≤ ‚âÖ 0.3039636   (2)

and therefore,

          P(Œº(n) = 0) = 1 - 2(3/œÄ¬≤) ‚âÖ 0.3920729.          (3)

Let‚Äòs see if we can visualize that. We will write a little
Awk script to generate the proportions of 1, -1, and 0 in
the results of the function as n increases, then we will
plot each one. It would be nice to plot them all together,
and highlight lines for 3/œÄ¬≤ and for 1-2(3/œÄ¬≤), but in ASCII
mode it makes the plots too busy and confused. So we will
plot them separately; and instead of plotting it directly,
we will plot the absolute value of the difference between
the relevant proportion and constant. We will then expect to
see a single generally decreasing curve in each plot. Also,
again because of the limitations of ASCII mode plotting,
we‚Äòll just plot up to n=25.

{{{
script=$(cat <<'EOF'
# Awk doesn‚Äòt natively have an absolute value
# function. We‚Äòll have to roll our own. Or better
# yet, just Google for it. We also have to define
# pi ourselves.
function abs(x){return ((x < 0.0) ? -x : x)}
BEGIN {pi = atan2(0, -1)}
{
  n+=1;
  if ($1 == 1) one+=1;
  else if ($1 == -1) neg_one+=1;
  else zero+=1;
  o=abs((3/pi^2)-(one/n))
  ne=abs((3/pi^2)-(neg_one/n))
  z=abs((1-6/pi^2)-(zero/n))
  print o, ne, z;
}
EOF
)
for i in {1..25}; do Œº $i; done > mobius.dat;
awk "$script" mobius.dat > props.dat
gnuplot -e "set terminal dumb; \
  set title \
  'Mobius function proportion of 1s converging on 3/œÄ¬≤'; \
  set yrange [0:1]; \
  plot 'props.dat' using 0:1 with lines title 'Proportion of 1';
  set title 'Mobius function proportion of -1s converging on 3/œÄ¬≤'; \
  plot 'props.dat' using 0:2 with line title 'Proportion of -1';
  set title 'Mobius function proportion of 0s converging on 1-6/œÄ¬≤'; \
  plot 'props.dat' using 0:3 with line title 'Proportion of 0';"
rm props.dat mobius.dat # Don‚Äòt let‚Äòs forget to clean up...
}}}

Not exactly proof, but it does seem to give some qualitative
support to the idea that our original implementation of the
Mobius function was correct.

But what does it all mean? Why does the M√∂bius function
proportions converge on these values?

No idea. Apparently, it‚Äòs a mystery.


Colophon
========
The plain-text source for this file is at:
http:///evanswinner.github.io/mobius.kc

{{{
echo "This file generated on `date` on `hostname`." ; echo
make_recipe mobius.txt ; echo
echo "Versions of programs used:"
whatver SYSTEM awk emacs factor \
        gnuplot kallychore seq whatver | fold -w60
}}}


Footnotes
=========

[1] Wolfram MathWorld, "M√∂bius Function."
http://mathworld.wolfram.com/MoebiusFunction.html

[2] Wolfram MathWorld, "Mertens Function."
http://mathworld.wolfram.com/MertensFunction.html

[3] The Math Book, Clifford A Pickover, p.226.


------
¬© 2018 Evans H Winner.

Evans Winner is a Professional IT Minion in Golden,
Colorado, and intends to keep on writing things like this
until he manages to get a decent job.

LinkedIn: https://www.linkedin.com/in/evanswinner/
Email: evans.winner@gmail.com
Webpage: http://evanswinner.github.io/portfolio.html
